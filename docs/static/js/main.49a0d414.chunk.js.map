{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","handleSubmit","type","value","onChange","target","handleInputChange","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA+BeA,EA5BK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACQ,sBAAMC,SAAW,SAACC,GAAD,OAVJ,SAACA,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAe,KAKaO,CAAaL,IAArC,SACI,uBAAOM,KAAK,OAAOC,MAAQV,EAAaW,SAAW,SAACR,GAAD,OAfrC,SAACA,GACvBF,EAAeE,EAAES,OAAOF,OAc0CG,CAAkBV,SCpB/EW,EAAc,SAAC,GAAe,IAAZC,EAAW,EAAXA,IAI3B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAIG,IAAMC,IAAMJ,EAAIK,QAC/B,4BAAKL,EAAIK,Y,uBCRRC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbL,EAFa,iDAEoCM,UAAWF,GAF/C,+DAGAG,MAAOP,GAHP,cAGbQ,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAEf,GAAU,IAAD,EAC9B,MAAQ,CACJgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QAVvB,kBAcZW,GAdY,4CAAH,sDCiCLK,EA7BC,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAIhB,ECNwB,SAAEA,GAE1B,MAA0BvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAW,WACHjB,EAASC,GACRiB,MAAM,SAAAC,GAAUH,EAAS,CACtBT,KAAMY,EACNL,SAAS,SAElB,CAAEb,IAEEc,EDT0BK,CAAcnB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAQrB,OACI,qCACI,6BAAMb,IAEJa,GAAW,4CAEb,qBAAKnB,UAAU,YAAf,SAEQgB,EAAOF,KAAI,SAAAf,GAAG,OACT,cAAC,EAAD,CAA4BA,IAAMA,GAAfA,EAAIgB,aEEjCW,EAxBM,WAEjB,MAAoC3C,mBAAU,CAAC,cAA/C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEIS,EAAWuB,KAAK,SAAER,GACd,OAAS,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCd5CqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.49a0d414.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n        setCategories( categories => [inputValue, ...categories] );\r\n        setinputValue( '' );\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={ (e) => handleSubmit(e) }>\r\n                <input type=\"text\" value={ inputValue } onChange={ (e) => handleInputChange(e) }></input>\r\n            </form>\r\n            );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ( { img } ) => {\r\n\r\n    //console.log( img );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ img.url } alt={ img.title } />\r\n            <p>{ img.title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=CbbJgiKYEiOam4wBbOmkDVJKaIFpfKo5&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( ( img ) => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        });\r\n    } );\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( imgs => setimages( imgs ) );\r\n    // }, [ category ] );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map(img => \r\n                        (<GifGridItem key={ img.id } img={ img } />)\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n            getGifs( category )\r\n            .then( imgs => { setState({\r\n                data: imgs,\r\n                loading: false\r\n            })} )        \r\n    }, [ category ] );\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['One Punch'] );\r\n\r\n    //const handleAddCategory = ( cat = 'Test' ) => {\r\n    //    setCategories( [...categories, cat] );\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                { \r\n                categories.map( ( category ) => {\r\n                    return ( <GifGrid key={ category } category={ category } /> );\r\n                } )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}